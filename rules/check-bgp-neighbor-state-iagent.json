{
  "rule": [
    {
      "description": "Collects BGP neighbor state periodically and notifies anomaly",
      "field": [
        {
          "description": "Sensor field to store peer address",
          "field-name": "peer-address",
          "sensor": [
            {
              "path": "peer-address",
              "sensor-name": "BgpNeighbor",
              "where": [
                {
                  "query": "peer-address =~ /{{neighbors}}/"
                }
              ]
            }
          ],
          "type": "string"
        },
        {
          "field-name": "peer-id",
          "sensor": [
            {
              "path": "peer-id",
              "sensor-name": "BgpNeighbor"
            }
          ],
          "type": "string"
        },
        {
          "field-name": "peer-state",
          "sensor": [
            {
              "path": "peer-state",
              "sensor-name": "BgpNeighbor"
            }
          ],
          "type": "string"
        }
      ],
      "keys": [
        "peer-address"
      ],
      "rule-name": "check-bgp-neighbor-state-iagent",
      "sensor": [
        {
          "iAgent": {
            "file": "bgp_neighbor_custom.yml",
            "frequency": "60s",
            "table": "bgpNeighborTable"
          },
          "sensor-name": "BgpNeighbor",
          "synopsis": "iAgent sensor definition"
        }
      ],
      "synopsis": "BGP neighbor state analyzer",
      "trigger": [
        {
          "description": "Sets health based on change in BGP neighbor session state",
          "frequency": "90s",
          "synopsis": "BGP session state KPI",
          "term": [
            {
              "term-name": "is-neighbor-up",
              "then": {
                "status": {
                  "color": "green",
                  "message": "BGP neighbor($peer-id) session is up"
                }
              },
              "when": {
                "matches-with": [
                  {
                    "ignore-case": [],
                    "left-operand": "$peer-state",
                    "right-operand": "Established"
                  }
                ]
              }
            },
            {
              "term-name": "neighbor-down",
              "then": {
                "status": {
                  "color": "red",
                  "message": "BGP neighbor($peer-id) peer-address $peer-address session is down"
                }
              }
            }
          ],
          "trigger-name": "neighbor-state"
        }
      ],
      "variable": [
        {
          "description": "BGP neighbor addresses to monitor, regular expression, e.g. '172.16.*'",
          "name": "neighbors",
          "type": "string",
          "value": ".*"
        }
      ]
    },
    {
      "description": "network rule for bgp session state using netconf",
      "field": [
        {
          "constant": {
            "value": "{{device1-group-variable}}"
          },
          "field-name": "device1-group",
          "type": "string"
        },
        {
          "constant": {
            "value": "{{device1-name-variable}}"
          },
          "field-name": "device1-name",
          "type": "string"
        },
        {
          "constant": {
            "value": "{{device1-peer-variable}}"
          },
          "field-name": "device1-peer",
          "type": "string"
        },
        {
          "field-name": "device1-peer-session-state",
          "reference": {
            "path": "/device-group[device-group-name={{device1-group-variable}}]/device[device-id={{device1-name-variable}}]/topic[topic-name='bgp.iagent']/rule[rule-name=check-bgp-neighbor-state-iagent]/field[peer-id='{{device1-peer-variable}}']/peer-state"
          }
        }
      ],
      "network-rule": [],
      "rule-frequency": "20s",
      "rule-name": "check-session-state",
      "trigger": [
        {
          "frequency": "10s",
          "term": [
            {
              "term-name": "Term_1",
              "then": {
                "status": {
                  "color": "green",
                  "message": "$device1-name to $device1-peer BGP session UP $device1-peer-session-state"
                }
              },
              "when": {
                "matches-with": [
                  {
                    "ignore-case": [],
                    "left-operand": "$device1-peer-session-state",
                    "right-operand": "ESTABLISHED"
                  }
                ]
              }
            },
            {
              "term-name": "Term_2",
              "then": {
                "status": {
                  "color": "red",
                  "message": "$device1-name to $device1-peer BGP session DOWN $device1-peer-session-state"
                }
              },
              "when": {
                "does-not-match-with": [
                  {
                    "ignore-case": [],
                    "left-operand": "$device1-peer-session-state",
                    "right-operand": "ESTABLISHED"
                  }
                ]
              }
            }
          ],
          "trigger-name": "session-state"
        }
      ],
      "variable": [
        {
          "name": "device1-group-variable",
          "type": "device-group",
          "value": "all"
        },
        {
          "name": "device1-name-variable",
          "type": "device",
          "value": "vMX1"
        },
        {
          "description": "ip address",
          "name": "device1-peer-variable",
          "type": "string"
        }
      ]
    }
  ],
  "topic-name": "bgp.iagent"
}